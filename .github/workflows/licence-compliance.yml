name: License Compliance Verification

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  issues: read
  checks: write

jobs:
  license-compliance-verification:
    runs-on: ubuntu-latest
    steps:
      # Checkout Repository
      - name: 'Checkout Repository'
        uses: actions/checkout@v4

      # Install Dependencies for License Finder
      - name: 'Install License Finder'
        run: |
          gem install license_finder

      # Run Gradle Dependency Report
      - name: 'Generate Dependency Report with Gradle'
        run: |
          ./gradlew dependencies --configuration runtimeClasspath > gradle-dependencies.txt

      # Run License Finder for Gradle Dependencies
      - name: 'Run License Finder'
        run: |
          license_finder --gradle --aggregate-summary --decisions-file decisions.yml \
            --allowed MIT --allowed Apache-2.0 \
            --output license_finder_report.xml
        env:
          GRADLE_HOME: ${{ runner.workspace }}/.gradle

      # Publish Report to GitHub UI
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2.2.0
        if: always()
        with:
          junit_files: "license_finder_report.xml"

      # Upload Report as Artifact
      - name: 'Upload Dependency Review Report In Artifact'
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: license-finder-report
          path: ${{ github.workspace }}/license_finder_report.xml

      # Packaging Report & Upload to Container Registry
      - name: Packaging Report & Upload to Container registry
        run: |
          echo "FROM alpine" > Dockerfile
          echo "COPY license_finder_report.xml /license_finder_report.xml" >> Dockerfile
          echo "CMD [\"cat\", \"/license_finder_report.xml\"]" >> Dockerfile
          REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          REPO_NAME=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_TAG="ghcr.io/${REPO_OWNER}/${REPO_NAME}/license-finder-report:latest"
          docker build -t $IMAGE_TAG .
          docker push "$IMAGE_TAG"
          echo "Pull Image Using Command: docker pull $IMAGE_TAG"
          echo "Extract Report Using Command: docker run --rm $IMAGE_TAG > license_finder_report.xml"
